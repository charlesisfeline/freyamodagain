<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://lime.openfl.org/project/1.0.4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://lime.openfl.org/project/1.0.4 http://lime.openfl.org/xsd/project-1.0.4.xsd">

	<!-- _________________________ Application Settings _________________________ -->

	<app title="Friday Night Funkin': Vs. Freya Crew" packageName="com.funkin.fnffreya" package="com.funkin.fnffreya" main="Main" version="0.4.1" company="CharlesCatYT" />
	<app preloader="funkin.ui.transition.preload.FunkinPreloader" />
	<set name="SWF_VERSION" value="11.8" />

	<app file="KitsuneEngine_WIN" if="windows" />
	<app file="KitsuneEngine_LINUX" if="linux" />
	<app file="KitsuneEngine_MAC" if="mac" />
	<app file="KitsuneEngine_ANDROID" if="android" />
	<app file="KitsuneEngine_IOS" if="ios" />

	<!-- ____________________________ Window Settings ___________________________ -->

	<!--These window settings apply to all targets-->
	<window width="1280" height="720" fps="60" background="#000000" hardware="true" vsync="false" />

	<!--HTML5-specific-->
	<window if="html5" resizable="true" />

	<!--Desktop-specific-->
	<window if="desktop" orientation="landscape" fullscreen="false" resizable="true" vsync="false" />

	<!--Mobile-specific-->
	<window if="mobile" orientation="landscape" fullscreen="true" width="1280" height="720" resizable="false" />

	<!-- _____________________________ Path Settings ____________________________ -->

	<set name="BUILD_DIR" value="export/debug" if="debug" />
	<set name="BUILD_DIR" value="export/release" unless="debug" />
	<set name="BUILD_DIR" value="export/32bit" if="32bit" />

	<source path="source" />

	<assets path="assets/preload" rename="assets" exclude="*.ogg|*.wav" if="web" />
	<assets path="assets/preload" rename="assets" exclude="*.mp3|*.wav" unless="web" />

	<define name="PRELOAD_ALL" unless="web" />
	<define name="NO_PRELOAD_ALL" unless="PRELOAD_ALL" />

	<section if="PRELOAD_ALL">
		<library name="songs" preload="true" />
		<library name="shared" preload="true" />
		<library name="tutorial" preload="true" />
		<library name="week1" preload="true" />
		<library name="week2" preload="true" />
		<library name="week3" preload="true" />
		<library name="week4" preload="true" />
		<library name="week5" preload="true" />
		<library name="week6" preload="true" />
		<library name="week7" preload="true" />
		<library name="weekend1" preload="true" />
		<library name="videos" preload="true" />
	</section>

	<section if="NO_PRELOAD_ALL">
		<library name="songs" preload="false" />
		<library name="shared" preload="false" />
		<library name="tutorial" preload="false" />
		<library name="week1" preload="false" />
		<library name="week2" preload="false" />
		<library name="week3" preload="false" />
		<library name="week4" preload="false" />
		<library name="week5" preload="false" />
		<library name="week6" preload="false" />
		<library name="week7" preload="false" />
		<library name="weekend1" preload="false" />
		<library name="videos" preload="false" />
	</section>

	<library name="art" preload="false" />

	<assets path="assets/songs" library="songs" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/songs" library="songs" exclude="*.fla|*.mp3|*.wav" unless="web" />

	<!-- Videos go in their own library because web never needs to preload them, they can just be streamed. -->
	<assets path="assets/videos" library="videos" />
	<assets path="assets/shared" library="shared" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/shared" library="shared" exclude="*.fla|*.mp3|*.wav" unless="web" />
	<assets path="assets/tutorial" library="tutorial" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/tutorial" library="tutorial" exclude="*.fla|*.mp3|*.wav" unless="web" />
	<assets path="assets/week1" library="week1" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/week1" library="week1" exclude="*.fla|*.mp3|*.wav" unless="web" />
	<assets path="assets/week2" library="week2" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/week2" library="week2" exclude="*.fla|*.mp3|*.wav" unless="web" />
	<assets path="assets/week3" library="week3" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/week3" library="week3" exclude="*.fla|*.mp3|*.wav" unless="web" />
	<assets path="assets/week4" library="week4" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/week4" library="week4" exclude="*.fla|*.mp3|*.wav" unless="web" />
	<assets path="assets/week5" library="week5" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/week5" library="week5" exclude="*.fla|*.mp3|*.wav" unless="web" />
	<assets path="assets/week6" library="week6" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/week6" library="week6" exclude="*.fla|*.mp3|*.wav" unless="web" />
	<assets path="assets/week7" library="week7" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/week7" library="week7" exclude="*.fla|*.mp3|*.wav" unless="web" />
	<assets path="assets/weekend1" library="weekend1" exclude="*.fla|*.ogg|*.wav" if="web" />
	<assets path="assets/weekend1" library="weekend1" exclude="*.fla|*.mp3|*.wav" unless="web" />

	<!-- <assets path='example_mods' rename='mods' embed='false'/> -->
	<!--
		AUTOMATICALLY MOVING EXAMPLE MODS INTO THE BUILD CAUSES ISSUES
		Currently, this line will add the mod files to the library manifest,
		which causes issues if the mod is not enabled.
		If we can exclude the `mods` folder from the manifest, we can re-enable this line.
		<assets path='example_mods' rename='mods' embed='false' exclude="*.md" />
	-->
	<assets path="art/readme.txt" rename="do NOT readme.txt" library="art"/>
	<assets path="CHANGELOG.md" rename="changelog.txt" library="art"/>
	<assets path='LICENSE.md' rename='LICENSE.txt' /> <!-- dont touch! -->
	<assets path='Modding.md' rename='moddingGuide.txt' /> <!-- dont touch! -->

	<assets path="assets/fonts" />

	<!-- If compiled via github actions, show debug version number. -->
	<define name="FORCE_DEBUG_VERSION" if="GITHUB_BUILD" />
	<define name="NO_REDIRECT_ASSETS_FOLDER" if="GITHUB_BUILD" />
	<define name="TOUCH_HERE_TO_PLAY" if="web || mobile" />

	<!-- _______________________________ Libraries ______________________________ -->

	<haxelib name="lime" /> <!-- Game engine backend -->
	<haxelib name="openfl" /> <!-- Game engine backend -->
	<haxelib name="flixel" /> <!-- Game engine -->

	<haxelib name="flixel-addons" /> <!-- Additional utilities for Flixel -->
	<haxelib name="hscript" /> <!-- Scripting -->
	<haxelib name="flixel-ui" /> <!-- UI framework (DEPRECATED) -->
	<haxelib name="haxeui-core" /> <!-- UI framework -->
	<haxelib name="haxeui-flixel" /> <!-- Integrate HaxeUI with Flixel -->
	<haxelib name="flixel-text-input" /> <!-- Improved text field rendering for HaxeUI -->
	<haxelib name="polymod" /> <!-- Modding framework -->
	<haxelib name="flxanimate" /> <!-- Texture atlas rendering -->
	<haxelib name="hxvlc" if="desktop || mobile" unless="hl" /> <!-- Video playback -->
	<haxelib name="funkin.vis"/>
	<haxelib name="grig.audio" />

	<haxelib name="FlxPartialSound" /> <!-- Loading partial sound data -->

	<haxelib name="json2object" /> <!-- JSON parsing -->
	<haxelib name="thx.core" /> <!-- General utility library, "the lodash of Haxe" -->
	<haxelib name="thx.semver" /> <!-- Version string handling -->

	<haxelib name="hxcpp-debug-server" if="desktop debug" /> <!-- VSCode debug support -->

	<!--Disable the Flixel core focus lost screen-->
	<haxedef name="FLX_NO_FOCUS_LOST_SCREEN" />
	<!--Disable the Flixel core debugger. Automatically gets set whenever you compile in release mode!-->
	<haxedef name="FLX_NO_DEBUG" unless="debug || FORCE_DEBUG_VERSION" />
	<!--Enable this for Nape release builds for a serious peformance improvement-->
	<haxedef name="NAPE_RELEASE_BUILD" unless="debug" />

	<!--
		Hide deprecation warnings until they're fixed.
		TODO: REMOVE THIS!!!!
		<haxeflag name="-w" value="-WDeprecated" />
	-->

	<haxedef name="DEBUG_SHITS" />

	<!-- Haxe 4.3.0+: Enable pretty syntax errors and stuff. -->
	<haxedef name="message.reporting" value="pretty" />

	<!-- _________________________________ Custom _______________________________ -->

	<!-- Disable trace() calls in release builds to bump up performance. -->
	<haxeflag name="--no-traces" unless="debug" />

	<!-- HScript relies heavily on Reflection, which means we can't use DCE. -->
	<haxeflag name="-dce no" />

	<!-- Ensure all Funkin' classes are available at runtime. -->
	<haxeflag name="--macro" value="include('funkin')" />

	<haxeflag name="--macro" value="allowPackage('flash')" />
	<haxeflag name="--macro" value="include('my.pack')" />

	<!-- Ensure all UI components are available at runtime. -->
	<haxeflag name="--macro" value="include('haxe.ui.backend.flixel.components')" />
	<haxeflag name="--macro" value="include('haxe.ui.containers.dialogs')" />
	<haxeflag name="--macro" value="include('haxe.ui.containers.menus')" />
	<haxeflag name="--macro" value="include('haxe.ui.containers.properties')" />
	<haxeflag name="--macro" value="include('haxe.ui.core')" />
	<haxeflag name="--macro" value="include('haxe.ui.components')" />
	<haxeflag name="--macro" value="include('haxe.ui.containers')" />

	<!--
		Ensure additional class packages are available at runtime (some only really used by scripts).
		Ignore packages we can't include.
	-->
	<haxeflag name="--macro" value="include('flixel', true, [ 'flixel.addons.editors.spine.*', 'flixel.addons.nape.*', 'flixel.system.macros.*' ])" />

	<!-- Necessary to provide stack traces for HScript. -->
	<haxedef name="hscriptPos" />
	<haxedef name="safeMode"/>

	<haxedef name="HXCPP_CHECK_POINTER" />
	<haxedef name="HXCPP_STACK_LINE" />
	<haxedef name="HXCPP_STACK_TRACE" />

	<!-- This macro allows addition of new functionality to existing Flixel. -->
	<haxeflag name="--macro" value="addMetadata('@:build(funkin.util.macro.FlxMacro.buildFlxBasic())', 'flixel.FlxBasic')" />

	<!--Place custom nodes like icons here (higher priority to override the HaxeFlixel icon)-->
	<icon path="art/icon16.png" size="16" />
	<icon path="art/icon32.png" size="32" />
	<icon path="art/icon64.png" size="64" />
	<icon path="art/iconOG.png" />

	<haxedef name="CAN_OPEN_LINKS" />
	<haxedef name="CAN_CHEAT" if="switch debug" />

	<!-- I don't remember what this is for. -->
	<haxedef name="haxeui_no_mouse_reset" />
	<!-- Clicking outside a dialog should deselect the current focused component. -->
	<haxedef name="haxeui_focus_out_on_click" />
	<!-- Required to use haxe.ui.backend.flixel.UIState with build macros. -->
	<haxedef name="haxeui_dont_impose_base_class" />

	<!--<haxedef name="HARDCODED_CREDITS" />-->

	<!-- Skip the Intro -->
	<section if="debug">
		<!-- Starts the game at the specified week, at the first song -->
		<!-- <haxedef name="week" value="1" if="debug"/> -->
		<!-- Starts the game at the specified song -->
		<!-- <haxedef name="song" value="bopeebo" if="debug"/> -->
		<!-- Difficulty, only used for week or song, defaults to 1 -->
		<!-- <haxedef name="dif" value="2" if="debug"/> -->
	</section>
	<section if="newgrounds">
		<!-- Enables Ng.core.verbose -->
		<!-- <haxedef name="NG_VERBOSE" /> -->
		<!-- Enables a NG debug session, so medals don't permently unlock -->
		<!-- <haxedef name="NG_DEBUG" /> -->
		<!-- pretends that the saved session Id was expired, forcing the reconnect prompt -->
		<!-- <haxedef name="NG_FORCE_EXPIRED_SESSION" if="debug" /> -->
	</section>

	<!-- Uncomment this to wipe your input settings. -->
	<!-- <haxedef name="CLEAR_INPUT_SAVE"/> -->

	<section if="debug" unless="NO_REDIRECT_ASSETS_FOLDER || html5 || GITHUB_BUILD">
		<!--
			Use the parent assets folder rather than the exported one
			No more will we accidentally undo our changes!
		-->
		<haxedef name="REDIRECT_ASSETS_FOLDER" />
	</section>


	<section>
		<!--
			This flag enables the popup/crashlog error handler.
			However, it also messes with breakpoints on some platforms.
		-->
		<haxedef name="openfl-enable-handle-error" />
	</section>

	<!-- Run a script before and after building. -->
	<prebuild haxe="source/Prebuild.hx"/>
	<postbuild haxe="source/Postbuild.hx"/>

	<!-- Enable this on platforms which do not support dropping files onto the window. -->
	<haxedef name="FILE_DROP_UNSUPPORTED" if="mac || mobile" />
	<section unless="FILE_DROP_UNSUPPORTED">
		<haxedef name="FILE_DROP_SUPPORTED" />
	</section>

	<target id="haxe" tool="linker" if="linux">
		<lib name="/usr/lib64/libX11.so" if="HXCPP_M64" /> <!-- linux support -->
	</target>
	<target id="haxe" tool="linker" if="macos">
		<lib name="/lib64/libX11.a" if="HXCPP_M64" /> <!-- mac support -->
	</target>

	<error value="You're using an outdated version of Haxe. Please update to 4.3.0 or greater. (TODO: Add 4.2.5 support)"
		if="${haxe == 4.1.0} ||
		${haxe == 4.1.1} ||
		${haxe == 4.1.2} ||
		${haxe == 4.1.3} ||
		${haxe == 4.1.4} ||
		${haxe == 4.1.5} ||
		${haxe == 4.2.0} ||
		${haxe == 4.2.1} ||
		${haxe == 4.2.2} ||
		${haxe == 4.2.3} ||
		${haxe == 4.2.4} ||
		${haxe == 4.2.5} ||
		" />

	<!-- Enable this on platforms which do not support the edsior views. -->
	<haxedef name="CHART_EDITOR_UNSUPPORTED" if="web || mobile" />
	<haxedef name="CHART_EDITOR_SUPPORTED" unless="web || mobile"/>

	<!-- Options for Polymod -->
	<section if="polymod">
		<!-- Turns on additional debug logging. -->
		<haxedef name="POLYMOD_DEBUG" value="true" if="debug" />
		<!-- The file extension to use for script files. -->
		<haxedef name="POLYMOD_SCRIPT_EXT" value=".hscript" />
		<!-- Which asset library to use for scripts. -->
		<haxedef name="POLYMOD_SCRIPT_LIBRARY" value="scripts" />
		<!-- The base path from which scripts should be accessed. -->
		<haxedef name="POLYMOD_ROOT_PATH" value="scripts/" />
		<!-- Determines the subdirectory of the mod folder used for file appending. -->
		<haxedef name="POLYMOD_APPEND_FOLDER" value="_append" />
		<!-- Determines the subdirectory of the mod folder used for file merges. -->
		<haxedef name="POLYMOD_MERGE_FOLDER" value="_merge" />
		<!-- Determines the file in the mod folder used for metadata. -->
		<haxedef name="POLYMOD_MOD_METADATA_FILE" value="_polymod_meta.json" />
		<!-- Determines the file in the mod folder used for the icon. -->
		<haxedef name="POLYMOD_MOD_ICON_FILE" value="_polymod_icon.png" />
	</section>
</project>
